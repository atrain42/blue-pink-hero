{"ast":null,"code":"var _jsxFileName = \"/Users/austinmaxheimer/Documents/landing-pages/smile-drip/src/components/DarkMode/DarkMode.js\";\nimport React from \"react\";\nimport { ReactComponent as Sun } from \"./Sun.svg\";\nimport { ReactComponent as Moon } from \"./Moon.svg\";\nimport \"./DarkMode.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DarkMode = () => {\n  const setDarkMode = () => {\n    document.querySelector(\"body\").setAttribute('data-theme', 'dark');\n    // save selected curent theme to local storage so when user refreshes\n    // the state persists\n    localStorage.setItem(\"selectedTheme\", \"dark\");\n  };\n  const setLightMode = () => {\n    document.querySelector('body').setAttribute('data-theme', 'light');\n    // save selected curent theme to local storage so when user refreshes\n    // the state persists\n    localStorage.setItem('selectedTheme', 'light');\n  };\n  const selectedTheme = localStorage.getItem('selectedTheme');\n  if (selectedTheme === 'dark') {\n    setDarkMode();\n  }\n  const toggleTheme = e => {\n    e.target.checked ? setDarkMode() : setLightMode();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dark_mode\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"dark_mode_input\",\n      type: \"checkbox\",\n      id: \"darkmode-toggle\",\n      onChange: toggleTheme,\n      defaultChecked: selectedTheme === 'dark'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"dark_mode_label\",\n      for: \"darkmode-toggle\",\n      children: [/*#__PURE__*/_jsxDEV(Sun, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Moon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this);\n};\n_c = DarkMode;\nexport default DarkMode;\nvar _c;\n$RefreshReg$(_c, \"DarkMode\");","map":{"version":3,"names":["React","ReactComponent","Sun","Moon","jsxDEV","_jsxDEV","DarkMode","setDarkMode","document","querySelector","setAttribute","localStorage","setItem","setLightMode","selectedTheme","getItem","toggleTheme","e","target","checked","className","children","type","id","onChange","defaultChecked","fileName","_jsxFileName","lineNumber","columnNumber","for","_c","$RefreshReg$"],"sources":["/Users/austinmaxheimer/Documents/landing-pages/smile-drip/src/components/DarkMode/DarkMode.js"],"sourcesContent":["import React from \"react\";\r\nimport { ReactComponent as Sun } from \"./Sun.svg\";\r\nimport { ReactComponent as Moon } from \"./Moon.svg\";\r\nimport \"./DarkMode.css\";\r\n\r\nconst DarkMode = () => {\r\n    const setDarkMode = () => {\r\n      document.querySelector(\"body\").setAttribute('data-theme', 'dark')\r\n      // save selected curent theme to local storage so when user refreshes\r\n      // the state persists\r\n      localStorage.setItem(\"selectedTheme\", \"dark\")\r\n    }\r\n\r\n    const setLightMode = () => {\r\n      document.querySelector('body').setAttribute('data-theme', 'light')\r\n      // save selected curent theme to local storage so when user refreshes\r\n      // the state persists\r\n      localStorage.setItem('selectedTheme', 'light')\r\n    }\r\n\r\n    const selectedTheme = localStorage.getItem('selectedTheme')\r\n\r\n    if (selectedTheme === 'dark') {\r\n      setDarkMode()\r\n    }\r\n\r\n    const toggleTheme = (e) => {\r\n      e.target.checked ? setDarkMode() : setLightMode()\r\n    }\r\n\r\n    return (\r\n      <div className='dark_mode'>\r\n          <input\r\n              className='dark_mode_input'\r\n              type='checkbox'\r\n              id='darkmode-toggle'\r\n              onChange={toggleTheme}\r\n              defaultChecked={selectedTheme === 'dark'}\r\n          />\r\n          <label className='dark_mode_label' for='darkmode-toggle'>\r\n              <Sun />\r\n              <Moon />\r\n          </label>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default DarkMode;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,IAAIC,GAAG,QAAQ,WAAW;AACjD,SAASD,cAAc,IAAIE,IAAI,QAAQ,YAAY;AACnD,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACnB,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBC,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC,CAACC,YAAY,CAAC,YAAY,EAAE,MAAM,CAAC;IACjE;IACA;IACAC,YAAY,CAACC,OAAO,CAAC,eAAe,EAAE,MAAM,CAAC;EAC/C,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBL,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC,CAACC,YAAY,CAAC,YAAY,EAAE,OAAO,CAAC;IAClE;IACA;IACAC,YAAY,CAACC,OAAO,CAAC,eAAe,EAAE,OAAO,CAAC;EAChD,CAAC;EAED,MAAME,aAAa,GAAGH,YAAY,CAACI,OAAO,CAAC,eAAe,CAAC;EAE3D,IAAID,aAAa,KAAK,MAAM,EAAE;IAC5BP,WAAW,CAAC,CAAC;EACf;EAEA,MAAMS,WAAW,GAAIC,CAAC,IAAK;IACzBA,CAAC,CAACC,MAAM,CAACC,OAAO,GAAGZ,WAAW,CAAC,CAAC,GAAGM,YAAY,CAAC,CAAC;EACnD,CAAC;EAED,oBACER,OAAA;IAAKe,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBhB,OAAA;MACIe,SAAS,EAAC,iBAAiB;MAC3BE,IAAI,EAAC,UAAU;MACfC,EAAE,EAAC,iBAAiB;MACpBC,QAAQ,EAAER,WAAY;MACtBS,cAAc,EAAEX,aAAa,KAAK;IAAO;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACFxB,OAAA;MAAOe,SAAS,EAAC,iBAAiB;MAACU,GAAG,EAAC,iBAAiB;MAAAT,QAAA,gBACpDhB,OAAA,CAACH,GAAG;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACPxB,OAAA,CAACF,IAAI;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEZ,CAAC;AAACE,EAAA,GAxCIzB,QAAQ;AA0Cd,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}